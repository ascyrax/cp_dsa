// @author: ascyrax
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef long double ld;
#define endl "\n"
#define ioss                   \
  ios::sync_with_stdio(false); \
  cin.tie(0);
#define int long long
#define pb push_back
#define ppb pop_back
#define pf push_front
#define ppf pop_front

double startTime;

double gct() // get_current_time
{
  return ((double)clock() - startTime) / CLOCKS_PER_SEC;
}

void suraj();

signed main()
{

  ioss

      // startTime=(double)clock();

      // freopen("shell.in","r",stdin);freopen("shell.out","w",stdout);

      // cout << setprecision(15) << fixed;

      int t = 1;

  cin >> t;

  for (int i = 1; i <= t; i++)
  {

    // cout<<"Case #"<<i<<": ";

    suraj();
  }

  return 0;
}

int inf = 1e18;
//.....................................

//.....................................

//.....................................

//.....................................

void suraj()
{
  int n, k;
  cin >> n >> k;
  int current = 1;
  int layer = 1;
  int ans = 0;

  while (k >= current)
  {
    int req = current * n;
    if (k >= req)
    {
      k -= req;
      ans += n;
    }
    else
    {
      int quo = k / current;
      // cout << "quo = " << quo << endl;
      ans += quo;
      // cout << "ans = " << ans << endl;
      k -= quo * current;
      // cout << "k = " << k << endl;
      int cnt = __builtin_popcountll(k);
      int minBit = 1, minBitLayer = 1;
      if (k == 0)
      {
        break;
      }
      else
        while (!(minBit & k))
        {
          minBit *= 2;
          minBitLayer++;
        }
      // cout << "cnt = " << cnt << endl;
      cnt--; // smallest bit gets added to one of the n elements of the array (which does not get the "current"(max bit being dealt with in this layer of bit operation where we began with 1 -> 2 -> 4 -> 8 ->...) added to it).
      // cout << "layer = " << layer << endl;
      // in the current elements no of set bits = layer-1. since "current" was not added in this layer to this element
      ans -= ((layer - 1) - minBitLayer + 1); // since 0111 + 0001 -> 0001
      ans++;                                  // since bit in the current layer gets generated by adding all the lower bits.
      // cout << "ans = " << ans << endl;
      ans += cnt;
      break;
    }
    current *= 2;
    layer++;
  }

  cout << ans << endl;
}
