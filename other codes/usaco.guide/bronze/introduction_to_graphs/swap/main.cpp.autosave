#include <bits/stdc++.h>
//#include <ext/pb_ds/assoc_container.hpp>

//using namespace __gnu_pbds;
using namespace std;

typedef  long long ll;
typedef long double ld;
mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());

#define all(x) begin(x), end(x)
#define sz(x) (int)(x).size()
#define endl "\n"
#define ioss ios::sync_with_stdio(false);cin.tie(0);
#define pb push_back
#define eb emplace_back

double startTime;
double gct()//get_current_time
{
    return ((double)clock()-startTime)/CLOCKS_PER_SEC;
}





























void suraj(){
int n,k;cin>>n>>k;
int a1,a2;cin>>a1>>a2;
int b1,b2;cin>>b1>>b2;
vector<int>v(101);
for(int i=0;i<=100;i++)v[i]=i;
vector<int>one=v;
for(int i=a1, j=a2;i<=a2;i++,j--){
    one[i]=j;
}
vector<int>two=one;
for(int i=b1,j=b2;i<=b2;i++,j--){
    two[i]=one[j];
}
for(int i=1;i<=n;i++){
    
}

}//
























int main()
{
    startTime=(double)clock();
    //freopen("shell.in","r",stdin);
    //freopen("shell.out","w",stdout);
    //ioss
    //int t;cin>>t;while(t--)
    suraj();
    //suraj2();
    //suraj3();
    //suraj4();
    return 0;
}
